/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AppLayoutImport } from './routes/app/_layout'
import { Route as authLayoutImport } from './routes/(auth)/_layout'
import { Route as AppLayoutGroupSlugImport } from './routes/app/_layout.$groupSlug'
import { Route as authLayoutRegisterImport } from './routes/(auth)/_layout.register'
import { Route as authLayoutLoginImport } from './routes/(auth)/_layout.login'

// Create Virtual Routes

const AppImport = createFileRoute('/app')()
const authImport = createFileRoute('/(auth)')()

// Create/Update Routes

const AppRoute = AppImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AppLayoutRoute = AppLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AppRoute,
} as any)

const authLayoutRoute = authLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => authRoute,
} as any)

const AppLayoutGroupSlugRoute = AppLayoutGroupSlugImport.update({
  path: '/$groupSlug',
  getParentRoute: () => AppLayoutRoute,
} as any)

const authLayoutRegisterRoute = authLayoutRegisterImport.update({
  path: '/register',
  getParentRoute: () => authLayoutRoute,
} as any)

const authLayoutLoginRoute = authLayoutLoginImport.update({
  path: '/login',
  getParentRoute: () => authLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/_layout': {
      id: '/_layout'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authLayoutImport
      parentRoute: typeof authRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/app/_layout': {
      id: '/app/_layout'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof AppRoute
    }
    '/(auth)/_layout/login': {
      id: '/_layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLayoutLoginImport
      parentRoute: typeof authLayoutImport
    }
    '/(auth)/_layout/register': {
      id: '/_layout/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authLayoutRegisterImport
      parentRoute: typeof authLayoutImport
    }
    '/app/_layout/$groupSlug': {
      id: '/app/_layout/$groupSlug'
      path: '/$groupSlug'
      fullPath: '/app/$groupSlug'
      preLoaderRoute: typeof AppLayoutGroupSlugImport
      parentRoute: typeof AppLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  authRoute: authRoute.addChildren({
    authLayoutRoute: authLayoutRoute.addChildren({
      authLayoutLoginRoute,
      authLayoutRegisterRoute,
    }),
  }),
  AppRoute: AppRoute.addChildren({
    AppLayoutRoute: AppLayoutRoute.addChildren({ AppLayoutGroupSlugRoute }),
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/",
        "/app"
      ]
    },
    "/": {
      "filePath": "(auth)",
      "children": [
        "/_layout"
      ]
    },
    "/_layout": {
      "filePath": "(auth)/_layout.tsx",
      "parent": "/",
      "children": [
        "/_layout/login",
        "/_layout/register"
      ]
    },
    "/app": {
      "filePath": "app",
      "children": [
        "/app/_layout"
      ]
    },
    "/app/_layout": {
      "filePath": "app/_layout.tsx",
      "parent": "/app",
      "children": [
        "/app/_layout/$groupSlug"
      ]
    },
    "/_layout/login": {
      "filePath": "(auth)/_layout.login.tsx",
      "parent": "/_layout"
    },
    "/_layout/register": {
      "filePath": "(auth)/_layout.register.tsx",
      "parent": "/_layout"
    },
    "/app/_layout/$groupSlug": {
      "filePath": "app/_layout.$groupSlug.tsx",
      "parent": "/app/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
